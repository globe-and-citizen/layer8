name: Deploy to EC2

on:
  push:
    branches:
      - main
      - devops/ci-cd-ec2

jobs:
  # deploy-network:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./infra/non-production/base
  #   outputs:
  #     ecr_url: ${{ steps.get_ecr_url.outputs.ecr_url }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: hashicorp/setup-terraform@v3
  #       with:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}        
  #     - name: Terraform Init
  #       id: init
  #       run: terraform init
        
  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate
        
  #     - name: Terraform Plan
  #       id: plan
  #       run: terraform plan

  #     - name: Terraform Apply
  #       id: apply
  #       run: terraform apply
        
  #     - name: Get ECR URL from Terraform output
  #       id: get_ecr_url
  #       run: |
  #         # Run Terraform command to get the ECR URL
  #         ecr_url=$(terraform output -raw ecr_url)
  #         echo "ecr_url=$ecr_repository_url" >> $GITHUB_OUTPUT
  build-layer8-server:
    runs-on: ubuntu-latest
    # needs: [deploy-network]
    steps:
    - uses: actions/checkout@v4
    - uses: docker://ghcr.io/kciter/aws-ecr-action:latest
      with:
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        region: ${{ vars.AWS_REGION }}
        repo: layer8
        tag: latest,${{ github.sha }}
        dockerfile: server/Dockerfile
  # deploy-layer8-server:
  #   needs: [deploy-network, build-layer8-server]
  #   env:
  #     loki_url: ${{ secrets.LOKI_URL }}
  #     cloudflare_tunnel_token: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
  #     ecr_image_tag: ${{ github.sha }}
  #     ecr_repository_url: ${{ needs.deploy-network.outputs.ecr_url }}
  #     s3_arn_env_file: "s3://ecsenv/layer8/nonproduction/.env"
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./infra/non-production/service
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Generate env file
  #       id: gen_env_file
  #       run: echo ${{ secrets.NON_PRODUCTION_APP_ENV }} > .env

  #     - uses: keithweaver/aws-s3-github-action@v1.0.0
  #       with:
  #         command: cp
  #         source: ./env
  #         destination: ${{ env.s3_arn_env_file }}
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws_region: ${{ vars.AWS_REGION }}

  #     - uses: hashicorp/setup-terraform@v3
  #       with:
  #         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

  #     - name: Terraform fmt
  #       id: fmt
  #       run: terraform fmt -check
  #       continue-on-error: true
        
  #     - name: Terraform Init
  #       id: init
  #       run: terraform init
        
  #     - name: Terraform Validate
  #       id: validate
  #       run: terraform validate
        
  #     - name: Terraform Plan
  #       id: plan
  #       run: terraform plan

  #     - name: Terraform Apply
  #       id: apply
  #       run: terraform apply
  
        
