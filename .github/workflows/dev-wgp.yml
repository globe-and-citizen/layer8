name: Deploy WGP Mock to Development Environment

on:
  workflow_dispatch:

jobs:
  build-wgp:
    name: Build WGP
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: kciter/aws-ecr-action@v3
        with:
          path: "./sp_mocks/wgp/frontend"
          dockerfile: ./sp_mocks/wgp/frontend/Dockerfile
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: wgp
          region: ${{ vars.AWS_REGION }}
          tags: frontend-latest
          create_repo: true
      - uses: kciter/aws-ecr-action@v3
        with:
            path: ./sp_mocks/wgp/backend
            dockerfile: ./sp_mocks/wgp/backend/Dockerfile
            access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            account_id: ${{ secrets.AWS_ACCOUNT_ID }}
            repo: wgp
            region: ${{ vars.AWS_REGION }}
            tags: backend-latest
            create_repo: true
  deploy-wgp:
    name: "Deploy WGP To Development"
    environment: "development"
    needs: [build-wgp]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/development/wgp
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Add Terraform Environment Variables
        id: addtfenv
        run: |
          echo -e "$TFVARS_STRING" >> terraform.tfvars
        env:
          TFVARS_STRING: |
            ecr_repository_url = "${{ vars.WGP_ECR_REPOSITORY_URL }}"
      
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply
