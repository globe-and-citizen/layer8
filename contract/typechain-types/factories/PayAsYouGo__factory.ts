/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PayAsYouGo, PayAsYouGoInterface } from "../PayAsYouGo";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_transactionAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BillAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BillPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "clientId",
        type: "string",
      },
    ],
    name: "ClientCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "addBillToClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "clientId",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "amount",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "timestamp",
            type: "uint64",
          },
        ],
        internalType: "struct PayAsYouGo.BillingInput[]",
        name: "billings",
        type: "tuple[]",
      },
    ],
    name: "bulkAddBillToClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "rate",
        type: "uint64",
      },
    ],
    name: "changeAllClientRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "rate",
        type: "uint64",
      },
    ],
    name: "changeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_transactionAddress",
        type: "address",
      },
    ],
    name: "changeTransactionAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "clientIDs",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "clients",
    outputs: [
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "unpaidBill",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "lastUsageFetchTime",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "rate",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
    ],
    name: "getClientById",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "clientId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "unpaidBill",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "lastUsageFetchTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "rate",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "timestamp",
                type: "uint64",
              },
              {
                internalType: "enum PayAsYouGo.TransactionType",
                name: "transactionType",
                type: "uint8",
              },
            ],
            internalType: "struct PayAsYouGo.Transaction[]",
            name: "transactions",
            type: "tuple[]",
          },
        ],
        internalType: "struct PayAsYouGo.Client",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClients",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "clientId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "unpaidBill",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "lastUsageFetchTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "rate",
            type: "uint64",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "timestamp",
                type: "uint64",
              },
              {
                internalType: "enum PayAsYouGo.TransactionType",
                name: "transactionType",
                type: "uint8",
              },
            ],
            internalType: "struct PayAsYouGo.Transaction[]",
            name: "transactions",
            type: "tuple[]",
          },
        ],
        internalType: "struct PayAsYouGo.Client[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "rate",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
    ],
    name: "newClient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "clientId",
        type: "string",
      },
    ],
    name: "payBill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200265d3803806200265d833981810160405281019062000037919062000129565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b6124f2806200016b6000396000f3fe60806040526004361061009c5760003560e01c80636af5ec39116100645780636af5ec391461018c5780636db80995146101c9578063797bad26146101f4578063a87d7ba71461021d578063f0a537e414610246578063f4217f2a1461026f5761009c565b806303900e36146100a1578063070abcc2146100ca57806309b1f57a146100e657806320ba1e9f1461010f5780634c4d7c5a1461014f575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906114ef565b610298565b005b6100e460048036038101906100df919061154b565b61042b565b005b3480156100f257600080fd5b5061010d60048036038101906101089190611704565b610691565b005b34801561011b57600080fd5b506101366004803603810190610131919061154b565b6107a1565b60405161014694939291906117f4565b60405180910390f35b34801561015b57600080fd5b506101766004803603810190610171919061154b565b610897565b6040516101839190611a8d565b60405180910390f35b34801561019857600080fd5b506101b360048036038101906101ae9190611adb565b610aa5565b6040516101c09190611b08565b60405180910390f35b3480156101d557600080fd5b506101de610b51565b6040516101eb9190611c69565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190611c8b565b610e0f565b005b34801561022957600080fd5b50610244600480360381019061023f9190611cb8565b610f23565b005b34801561025257600080fd5b5061026d60048036038101906102689190611d14565b611003565b005b34801561027b57600080fd5b5061029660048036038101906102919190611de1565b611240565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90611e5a565b60405180910390fd5b60006003826040516103389190611eb6565b908152602001604051809103902090508181600001908161035991906120d9565b5060008160010181905550828160020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550428160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506002829080600181540180825580915050600190039060005260206000200160009091909190915090816103ee91906120d9565b507feb98df470d17266538e4ee034952206621fad8d86ca38b090e92f645891084828260405161041e9190611b08565b60405180910390a1505050565b600060038260405161043d9190611eb6565b908152602001604051809103902090508060010154341115610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b906121f7565b60405180910390fd5b348160010160008282546104a89190612246565b92505081905550600060405180606001604052803481526020014267ffffffffffffffff168152602001600060018111156104e6576104e56118d4565b5b8152509050816003018190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548160ff0219169083600181111561057d5761057c6118d4565b5b021790555050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16346040516105cc906122ab565b60006040518083038185875af1925050503d8060008114610609576040519150601f19603f3d011682016040523d82523d6000602084013e61060e565b606091505b5050905080610652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064990612332565b60405180910390fd5b7f85efa8140d8de83ee16bcc1d3f231311f1eaa6dacc4868130fc30689c5ab0b668434604051610683929190612352565b60405180910390a150505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071690611e5a565b60405180910390fd5b60005b815181101561079d5761079082828151811061074157610740612382565b5b6020026020010151600001518383815181106107605761075f612382565b5b60200260200101516020015184848151811061077f5761077e612382565b5b602002602001015160400151611003565b8080600101915050610722565b5050565b6003818051602081018201805184825260208301602085012081835280955050505050506000915090508060000180546107da90611efc565b80601f016020809104026020016040519081016040528092919081815260200182805461080690611efc565b80156108535780601f1061082857610100808354040283529160200191610853565b820191906000526020600020905b81548152906001019060200180831161083657829003601f168201915b5050505050908060010154908060020160009054906101000a900467ffffffffffffffff16908060020160089054906101000a900467ffffffffffffffff16905084565b61089f611312565b6003826040516108af9190611eb6565b90815260200160405180910390206040518060a00160405290816000820180546108d890611efc565b80601f016020809104026020016040519081016040528092919081815260200182805461090490611efc565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016002820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a965783829060005260206000209060020201604051806060016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900460ff166001811115610a7157610a706118d4565b5b6001811115610a8357610a826118d4565b5b81525050815260200190600101906109ed565b50505050815250509050919050565b60028181548110610ab557600080fd5b906000526020600020016000915090508054610ad090611efc565b80601f0160208091040260200160405190810160405280929190818152602001828054610afc90611efc565b8015610b495780601f10610b1e57610100808354040283529160200191610b49565b820191906000526020600020905b815481529060010190602001808311610b2c57829003601f168201915b505050505081565b6060600060028054905067ffffffffffffffff811115610b7457610b736113c4565b5b604051908082528060200260200182016040528015610bad57816020015b610b9a611312565b815260200190600190039081610b925790505b50905060005b600280549050811015610e0757600360028281548110610bd657610bd5612382565b5b90600052602060002001604051610bed9190612434565b90815260200160405180910390206040518060a0016040529081600082018054610c1690611efc565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4290611efc565b8015610c8f5780601f10610c6457610100808354040283529160200191610c8f565b820191906000526020600020905b815481529060010190602001808311610c7257829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016002820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610dd45783829060005260206000209060020201604051806060016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900460ff166001811115610daf57610dae6118d4565b5b6001811115610dc157610dc06118d4565b5b8152505081526020019060010190610d2b565b5050505081525050828281518110610def57610dee612382565b5b60200260200101819052508080600101915050610bb3565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9490611e5a565b60405180910390fd5b60005b600280549050811015610f1f5781600360028381548110610ec457610ec3612382565b5b90600052602060002001604051610edb9190612434565b908152602001604051809103902060020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508080600101915050610ea0565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa890611e5a565b60405180910390fd5b6000600383604051610fc39190611eb6565b90815260200160405180910390209050818160020160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611091576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108890611e5a565b60405180910390fd5b60006003846040516110a39190611eb6565b9081526020016040518091039020905060008160020160089054906101000a900467ffffffffffffffff16846110d9919061244b565b67ffffffffffffffff169050600060405180606001604052808381526020018567ffffffffffffffff16815260200160018081111561111b5761111a6118d4565b5b8152509050826003018190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548160ff021916908360018111156111b2576111b16118d4565b5b02179055505050818360010160008282546111cd9190612488565b92505081905550838360020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507f3d43d2c72e75437af21df25cfbf67c625914003c91122e46b6e3396434c1f7c28683604051611230929190612352565b60405180910390a1505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c590611e5a565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060a001604052806060815260200160008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b61138681611369565b811461139157600080fd5b50565b6000813590506113a38161137d565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113fc826113b3565b810181811067ffffffffffffffff8211171561141b5761141a6113c4565b5b80604052505050565b600061142e611355565b905061143a82826113f3565b919050565b600067ffffffffffffffff82111561145a576114596113c4565b5b611463826113b3565b9050602081019050919050565b82818337600083830152505050565b600061149261148d8461143f565b611424565b9050828152602081018484840111156114ae576114ad6113ae565b5b6114b9848285611470565b509392505050565b600082601f8301126114d6576114d56113a9565b5b81356114e684826020860161147f565b91505092915050565b600080604083850312156115065761150561135f565b5b600061151485828601611394565b925050602083013567ffffffffffffffff81111561153557611534611364565b5b611541858286016114c1565b9150509250929050565b6000602082840312156115615761156061135f565b5b600082013567ffffffffffffffff81111561157f5761157e611364565b5b61158b848285016114c1565b91505092915050565b600067ffffffffffffffff8211156115af576115ae6113c4565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b6000606082840312156115e5576115e46115c5565b5b6115ef6060611424565b9050600082013567ffffffffffffffff81111561160f5761160e6115ca565b5b61161b848285016114c1565b600083015250602061162f84828501611394565b602083015250604061164384828501611394565b60408301525092915050565b600061166261165d84611594565b611424565b90508083825260208201905060208402830185811115611685576116846115c0565b5b835b818110156116cc57803567ffffffffffffffff8111156116aa576116a96113a9565b5b8086016116b789826115cf565b85526020850194505050602081019050611687565b5050509392505050565b600082601f8301126116eb576116ea6113a9565b5b81356116fb84826020860161164f565b91505092915050565b60006020828403121561171a5761171961135f565b5b600082013567ffffffffffffffff81111561173857611737611364565b5b611744848285016116d6565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561178757808201518184015260208101905061176c565b60008484015250505050565b600061179e8261174d565b6117a88185611758565b93506117b8818560208601611769565b6117c1816113b3565b840191505092915050565b6000819050919050565b6117df816117cc565b82525050565b6117ee81611369565b82525050565b6000608082019050818103600083015261180e8187611793565b905061181d60208301866117d6565b61182a60408301856117e5565b61183760608301846117e5565b95945050505050565b600082825260208201905092915050565b600061185c8261174d565b6118668185611840565b9350611876818560208601611769565b61187f816113b3565b840191505092915050565b611893816117cc565b82525050565b6118a281611369565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611914576119136118d4565b5b50565b600081905061192582611903565b919050565b600061193582611917565b9050919050565b6119458161192a565b82525050565b606082016000820151611961600085018261188a565b5060208201516119746020850182611899565b506040820151611987604085018261193c565b50505050565b6000611999838361194b565b60608301905092915050565b6000602082019050919050565b60006119bd826118a8565b6119c781856118b3565b93506119d2836118c4565b8060005b83811015611a035781516119ea888261198d565b97506119f5836119a5565b9250506001810190506119d6565b5085935050505092915050565b600060a0830160008301518482036000860152611a2d8282611851565b9150506020830151611a42602086018261188a565b506040830151611a556040860182611899565b506060830151611a686060860182611899565b5060808301518482036080860152611a8082826119b2565b9150508091505092915050565b60006020820190508181036000830152611aa78184611a10565b905092915050565b611ab8816117cc565b8114611ac357600080fd5b50565b600081359050611ad581611aaf565b92915050565b600060208284031215611af157611af061135f565b5b6000611aff84828501611ac6565b91505092915050565b60006020820190508181036000830152611b228184611793565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060a0830160008301518482036000860152611b738282611851565b9150506020830151611b88602086018261188a565b506040830151611b9b6040860182611899565b506060830151611bae6060860182611899565b5060808301518482036080860152611bc682826119b2565b9150508091505092915050565b6000611bdf8383611b56565b905092915050565b6000602082019050919050565b6000611bff82611b2a565b611c098185611b35565b935083602082028501611c1b85611b46565b8060005b85811015611c575784840389528151611c388582611bd3565b9450611c4383611be7565b925060208a01995050600181019050611c1f565b50829750879550505050505092915050565b60006020820190508181036000830152611c838184611bf4565b905092915050565b600060208284031215611ca157611ca061135f565b5b6000611caf84828501611394565b91505092915050565b60008060408385031215611ccf57611cce61135f565b5b600083013567ffffffffffffffff811115611ced57611cec611364565b5b611cf9858286016114c1565b9250506020611d0a85828601611394565b9150509250929050565b600080600060608486031215611d2d57611d2c61135f565b5b600084013567ffffffffffffffff811115611d4b57611d4a611364565b5b611d57868287016114c1565b9350506020611d6886828701611394565b9250506040611d7986828701611394565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dae82611d83565b9050919050565b611dbe81611da3565b8114611dc957600080fd5b50565b600081359050611ddb81611db5565b92915050565b600060208284031215611df757611df661135f565b5b6000611e0584828501611dcc565b91505092915050565b7f4e6f742074686520636f6e7472616374206f776e657200000000000000000000600082015250565b6000611e44601683611758565b9150611e4f82611e0e565b602082019050919050565b60006020820190508181036000830152611e7381611e37565b9050919050565b600081905092915050565b6000611e908261174d565b611e9a8185611e7a565b9350611eaa818560208601611769565b80840191505092915050565b6000611ec28284611e85565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f1457607f821691505b602082108103611f2757611f26611ecd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611f8f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f52565b611f998683611f52565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611fd6611fd1611fcc846117cc565b611fb1565b6117cc565b9050919050565b6000819050919050565b611ff083611fbb565b612004611ffc82611fdd565b848454611f5f565b825550505050565b600090565b61201961200c565b612024818484611fe7565b505050565b5b818110156120485761203d600082612011565b60018101905061202a565b5050565b601f82111561208d5761205e81611f2d565b61206784611f42565b81016020851015612076578190505b61208a61208285611f42565b830182612029565b50505b505050565b600082821c905092915050565b60006120b060001984600802612092565b1980831691505092915050565b60006120c9838361209f565b9150826002028217905092915050565b6120e28261174d565b67ffffffffffffffff8111156120fb576120fa6113c4565b5b6121058254611efc565b61211082828561204c565b600060209050601f8311600181146121435760008415612131578287015190505b61213b85826120bd565b8655506121a3565b601f19841661215186611f2d565b60005b8281101561217957848901518255600182019150602085019450602081019050612154565b868310156121965784890151612192601f89168261209f565b8355505b6001600288020188555050505b505050505050565b7f4f766572706179696e67207468652062696c6c00000000000000000000000000600082015250565b60006121e1601383611758565b91506121ec826121ab565b602082019050919050565b60006020820190508181036000830152612210816121d4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612251826117cc565b915061225c836117cc565b925082820390508181111561227457612273612217565b5b92915050565b600081905092915050565b50565b600061229560008361227a565b91506122a082612285565b600082019050919050565b60006122b682612288565b9150819050919050565b7f4661696c656420746f2073656e64207061796d656e7420746f20636f6e74726160008201527f6374206f776e6572000000000000000000000000000000000000000000000000602082015250565b600061231c602883611758565b9150612327826122c0565b604082019050919050565b6000602082019050818103600083015261234b8161230f565b9050919050565b6000604082019050818103600083015261236c8185611793565b905061237b60208301846117d6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081546123be81611efc565b6123c88186611e7a565b945060018216600081146123e357600181146123f85761242b565b60ff198316865281151582028601935061242b565b61240185611f2d565b60005b8381101561242357815481890152600182019150602081019050612404565b838801955050505b50505092915050565b600061244082846123b1565b915081905092915050565b600061245682611369565b915061246183611369565b925082820261246f81611369565b915080821461248157612480612217565b5b5092915050565b6000612493826117cc565b915061249e836117cc565b92508282019050808211156124b6576124b5612217565b5b9291505056fea2646970667358221220be504513da66fd6dca2412bd4532c372c3f8bd3feeeecd565342d7d780a10ac564736f6c63430008180033";

type PayAsYouGoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayAsYouGoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PayAsYouGo__factory extends ContractFactory {
  constructor(...args: PayAsYouGoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _transactionAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_transactionAddress, overrides || {});
  }
  override deploy(
    _transactionAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_transactionAddress, overrides || {}) as Promise<
      PayAsYouGo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PayAsYouGo__factory {
    return super.connect(runner) as PayAsYouGo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayAsYouGoInterface {
    return new Interface(_abi) as PayAsYouGoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PayAsYouGo {
    return new Contract(address, _abi, runner) as unknown as PayAsYouGo;
  }
}
